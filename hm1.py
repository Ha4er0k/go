import networkx as nx
import matplotlib.pyplot as plt

G = nx.Graph()

# –†–µ–∞–ª—å–Ω—ñ —Å—Ç–∞–Ω—Ü—ñ—ó –º–µ—Ç—Ä–æ –≤ –ê–º—Å—Ç–µ—Ä–¥–∞–º—ñ –∑–≥—ñ–¥–Ω–æ –∑ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ—é —Å—Ö–µ–º–æ—é
lines = {
    "50": ["Isolatorweg","Sloterdijk","De Vlugtlaan","Jan van Galenstraat",
           "Postjesweg","Lelylaan","Heemstedestraat","Henk Sneevlietweg",
           "Amstelveenseweg","Zuid","RAI","Overamstel","Van der Madeweg",
           "Duivendrecht","Strandvliet","Bijlmer ArenA","Bullewijk",
           "Holendrecht","Reigersbos","Gein"],
    "51": ["Isolatorweg","Sloterdijk","Lelylaan","Heemstedestraat",
           "Henk Sneevlietweg","Amstelveenseweg","Zuid","Centraal",
           "Amstel"],
    "52": ["Noord","Noorderpark","Centraal","Rokin","Vijzelgracht",
           "De Pijp","Europaplein","Zuid"],
    "53": ["Centraal","Nieuwmarkt","Waterlooplein","Weesperplein",
           "Wibautstraat","Amstel","Spaklerweg","Van der Madeweg",
           "Venserpolder","Diemen Zuid","Verrijn Stuartweg",
           "Ganzenhoef","Kraaiennest","Gaasperplas"],
    "54": ["Centraal","Nieuwmarkt","Waterlooplein","Weesperplein",
           "Wibautstraat","Amstel","Spaklerweg","Van der Madeweg",
           "Duivendrecht","Strandvliet","Bijlmer ArenA","Bullewijk",
           "Holendrecht","Reigersbos","Gein"]
}

# –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–µ–±–µ—Ä –º—ñ–∂ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–∏–º–∏ —Å—Ç–∞–Ω—Ü—ñ—è–º–∏ –∫–æ–∂–Ω–æ—ó –ª—ñ–Ω—ñ—ó
for stations in lines.values():
    for i in range(len(stations) - 1):
        G.add_edge(stations[i], stations[i + 1])

# üîç –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è –≥—Ä–∞—Ñ–∞
plt.figure(figsize=(16, 10))
pos = nx.spring_layout(G, seed=42)
nx.draw(G, pos, with_labels=True, node_color='lightblue', edge_color='gray',
        node_size=400, font_size=8)
plt.title("–ú–µ—Ä–µ–∂–∞ –º–µ—Ç—Ä–æ –ê–º—Å—Ç–µ—Ä–¥–∞–º–∞ (—Ä–µ–∞–ª—å–Ω—ñ —Å—Ç–∞–Ω—Ü—ñ—ó)", fontsize=14)
plt.show()
# –ë–∞–∑–æ–≤—ñ –º–µ—Ç—Ä–∏–∫–∏
print("üî¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–∞–Ω—Ü—ñ–π:", G.number_of_nodes())
print("üîó –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑'—î–¥–Ω–∞–Ω—å:", G.number_of_edges())

# –°—Ç—É–ø–µ–Ω—ñ –≤–µ—Ä—à–∏–Ω
print("\nüìä –¢–æ–ø-10 –Ω–∞–π–≤–∞–∂–ª–∏–≤—ñ—à–∏—Ö —Å—Ç–∞–Ω—Ü—ñ–π –∑–∞ —Å—Ç—É–ø–µ–Ω–µ–º:")
for station, degree in sorted(G.degree(), key=lambda x: x[1], reverse=True)[:10]:
    print(f"{station}: {degree}")
